name: UI Test Pipeline

trigger:
  - none

schedules:
  - cron: '0 21 * * sun,mon,tue,wed,thu'
    displayName: Daily 8AM RDM Pipeline
    branches:
      include:
      - master
    always: true

pr:
  - none

stages:
  - stage: CypressTests
    displayName: Cypress Tests
    jobs:
      - job: MochawesomeReport
        timeoutInMinutes: 480
        pool:
          name: //poolname
        displayName: Mochawesome Report
        steps: 
          - checkout: self
          - script: |
              mkdir $(Build.SourcesDirectory)/mochawesome-report-ui/
              node -v
              npm install
              npx cypress run --spec "cypress/e2e/UI/TESTUI/*.ts" --headless
              cp -a $(Build.SourcesDirectory)/cypress/screenshots/. $(Build.SourcesDirectory)/mochawesome-report-ui/screenshots/
              cp -a $(Build.SourcesDirectory)/cypress/videos/. $(Build.SourcesDirectory)/mochawesome-report-ui
              cp -a $(Build.SourcesDirectory)/cypress/reports/. $(Build.SourcesDirectory)/mochawesome-report-ui
          - task: ArchiveFiles@2
            displayName: Compressing Mochawesome Report
            inputs:
              rootFolderOrFile: $(Build.SourcesDirectory)/mochawesome-report-ui
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: mochawesome-report-ui.zip
          - task: PublishPipelineArtifact@1
            displayName: Publishing HTML test report
            inputs:
              publishLocation: 'pipeline'
              artifact: mochawesome-report-ui.zip
              targetPath: $(Build.SourcesDirectory)/mochawesome-report-ui.zip

      - job: JunitReport      
        timeoutInMinutes: 480
        pool:
          name: //poolname
        displayName: Junit Report
        steps:
          - checkout: self
          - script: |
              mkdir $(Build.SourcesDirectory)/junit-report-ui/
              npm delete:junitreports
              npm install
              npm run uireport
              npm run combine:junituireports
              cp -a $(Build.SourcesDirectory)/cypress/screenshots/. $(Build.SourcesDirectory)/junit-report-ui/screenshots/ 
              cp -a $(Build.SourcesDirectory)/cypress/videos/. $(Build.SourcesDirectory)/junit-report-ui/videos/
              cp -a $(Build.SourcesDirectory)/cypress/junit-reports/. $(Build.SourcesDirectory)/junit-report-ui/junit-reports/
          - task: ArchiveFiles@2
            displayName: Compressing Junit Report
            inputs:
              rootFolderOrFile: $(Build.SourcesDirectory)/junit-report-ui
              includeRootFolder: true
              archiveType: 'zip'
              archiveFile: junit-report-ui.zip
          - task: PublishPipelineArtifact@1
            displayName: Publishing Junit report
            inputs:
              publishLocation: 'pipeline'
              artifact: junit-report-ui.zip
              targetPath: $(Build.SourcesDirectory)/junit-report-ui.zip
          - task: PublishTestResults@2
            displayName: Publishing UI Junit report
            condition: always()
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: '$(Build.SourcesDirectory)/cypress/junit-reports/junit-ui-report.xml'

  - stage: PowerShellSnapshots
    displayName: Snapshots Attachment
    dependsOn: 
          - CypressTests
    jobs:
      - job: Attach_Snapshots
        pool:
          name: //poolname        
        steps:
          - task: DownloadPipelineArtifact@2
            displayName: Download Artifact
            inputs:
              artifact: junit-report-ui.zip
              path: $(Build.SourcesDirectory)
          - task: PowerShell@2
            displayName: Attaching snapshots to tests
            inputs:
              filePath: $(Build.SourcesDirectory)/scripts/screenshots-attachment.ps1
              arguments:
                junit-report-ui.zip
                $(Build.SourcesDirectory)
                "/junit-report-ui"
                $(auth_token)

      
